syntax = "proto3";
package protocol;

// id 1-100

message Gateway{
    int32 id =1;
    string address =2;
}

message G2CRegisterGateway{
    enum MsgID{
        Zero =0;
        ID = 1;
    }
    Gateway gate =1;
} 
message C2GRegisterGatewayResult{
    enum MsgID{
        Zero =0;
        ID=2;
    }
    string result =1;
}

message G2CRegisterGatewayUser{
    enum MsgID{
        Zero =0;
        ID =3;
    }
    uint64 uid =1;
}
message C2GRegisterGatewayUserResult{
    enum MsgID{
        Zero =0;
        ID =4;
    }
    string result =1;
}

message G2CRemoveGatewayUser{
    enum MsgID{
        Zero =0;
        ID =5;
    }
    uint64 uid =1;
}
// 业务处理的设计，就是一个rpc服务器，gateway通过rpc调用，处理这个消息，然后，可以在rpc返回给这次调用的结果。如果需要转给其他客户端，通过centerserver转交
// 增加一个业务处理服务器
message C2GAddServiceServer{
    enum MsgID{
        Zero = 0;
        ID = 6;
    }
    repeated int32 procID = 1;//可以处理的消息id
    string rpcAddress = 2;
}

// 删除一个业务处理服务器
message C2GRemoveServiceServere{
    enum MsgID{
        Zero =0;
        ID = 7;
    }
    string rpcadds =3;
}
